name: CI/CD

on:
  push:
    branches:
      - main
      - develop

jobs:
  lint-format-test:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run black
        run: |
          pip install black
          black src --check

      - name: Run pylint
        run: |
          pip install pylint
          pylint src || true

      - name: Run tests
        run: |
          pytest tests

  build-and-push:
    needs: lint-format-test
    runs-on: self-hosted
    outputs:
      environment: ${{ steps.set-env.outputs.ENVIRONMENT }} 
      image_tag: ${{ steps.set-env.outputs.IMAGE_TAG }} 
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Set environment variables
        id: set-env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "ENVIRONMENT=test" >> $GITHUB_ENV
            echo "IMAGE_TAG=test-${{ github.sha }}" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "ENVIRONMENT=prod" >> $GITHUB_ENV
            echo "IMAGE_TAG=prod-${{ github.sha }}" >> $GITHUB_ENV
          fi
          echo "ENVIRONMENT=${{ env.ENVIRONMENT }}" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG=${{ env.IMAGE_TAG }}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.IMAGE_TAG }}
            ghcr.io/${{ github.repository }}:${{ env.ENVIRONMENT }}

  deploy:
    needs: build-and-push
    runs-on: self-hosted
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0

      - name: Deploy with Helm
        env:
          ENVIRONMENT: ${{ needs.build-and-push.outputs.environment }}
          IMAGE_TAG: ${{ needs.build-and-push.outputs.image_tag }}
        run: |
          helm upgrade --install backend ./helm --namespace=$ENVIRONMENT -f ./helm/values.$ENVIRONMENT.yaml --set image.tag=$IMAGE_TAG
