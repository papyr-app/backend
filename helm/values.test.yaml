replicaCount: 1

image:
  repository: ghcr.io/papyr-app/backend
  pullPolicy: Always
  tag: "test"

service:
  type: ClusterIP
  port: 8000

env:
  AWS_DEFAULT_REGION: eu-north-1
  S3_BUCKET_NAME: test-papyr-documents
  FLASK_ENV: testing

envFromSecret: backend-secrets

imagePullSecrets:
  - name: ghcr-secret
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: test-api.papyr-app.xyz
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - hosts:
        - test-api.papyr-app.xyz
      secretName: papyr-tls

resources:
  limits:
    cpu: 256m
    memory: 300Mi
  requests:
    cpu: 100m
    memory: 200Mi

livenessProbe:
  httpGet:
    path: /health
    port: http
readinessProbe:
  httpGet:
    path: /health
    port: http

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
